/**
 * Copyright (c) 2021-2022 OE2RP-Team
 *
 * This software is released under the MIT License.
 * https://opensource.org/licenses/MIT
 */

#include "zcommon.acs"

const int SECONDS = 35; // Ticks per second

// Useful functions

function int getStringHeight(str String) {
    int i      = 0;
    int height = 0;

    while(String[i] != '\0') {
        if(String[i++] == '\n') height++;
    }
    return height;
}

// Global scripts

// ACS based DRPG Window

Script "window"(str _Text) { // s: -> str
    // This crutch fixes the GZDoom Encoding bug in russian translation
    // https://trello.com/c/Yjn7YM8b
    str Text;
    int TextLen = strlen(_Text);
    for (int i = 0; i < TextLen; i++) {
        if (_Text[i] == 0x20) // space
            Text = StrParam(s:Text, s:" ");
        else
            Text = StrParam(s:Text, c:_Text[i]);
    }

    const int SYM_HEIGHT = 12; // Symbol's height is 12px

    Delay(2);

    int ReadedKey;
    int FirstRun = 1;
    int ScrollY  = 0;
    int height   = getStringHeight(Text);

    Thing_Stop(0); // TID_Player -> 0
    SetPlayerProperty(0, True, PROP_TOTALLYFROZEN);

    While(TRUE) {
        if(ReadedKey & BT_FORWARD && ScrollY > 0) {
            ScrollY -= SYM_HEIGHT;
            Delay(4);
        }
        if(ReadedKey & BT_BACK && ScrollY < height * SYM_HEIGHT) {
            ScrollY += SYM_HEIGHT;
            Delay(4);
        }

        SetHudSize(640, 480, true);
        SetHUDClipRect(0, 0, 0, 0, 0);
        SetFont("M_WINDOW");
        HudMessage(s: "A"; HUDMSG_PLAIN, -10000000, 0, 324.0, 320.1, 1);
        SetFont("smallfont");
        SetHudClipRect(320 - 160 / 2 + 1, 320 + 1, 160 - 2, 70 - 2, 0, true);
        HudMessage(s: Text; HUDMSG_PLAIN, -10000001, CR_WHITE, ((320 - 160 / 2 + 1) << 16) + 3.0 + 0.1, 322.1 - (ScrollY << 16), 1);
        SetHudSize(0, 0, false);
        Delay(1);

        ReadedKey = GetPlayerInput(-1, INPUT_BUTTONS);

        if((FirstRun == 0) && (ReadedKey & BT_USE))
            Break;
        if((FirstRun == 1) && !(ReadedKey & BT_USE))
            FirstRun = 0;
    }

    HudMessage(s: ""; HUDMSG_PLAIN, -10000000, 0, 0.5, 0.8, 1);
    HudMessage(s: ""; HUDMSG_PLAIN, -10000001, 0, 0.5, 0.8, 1);
    SetPlayerProperty(0, False, PROP_TOTALLYFROZEN);
}

Script "lockwindow"(str Text, str Password, int ScriptNumber) {
    Print(s:"Lock window");
    AmbientSound("environment/lockpick/positive", 200);
    //ScriptCall("DoorCodeInputActor", "DoorCode", Text, Password, ScriptNumber);
    Delay(2);
}

#include "inc_mapapis.acs"
